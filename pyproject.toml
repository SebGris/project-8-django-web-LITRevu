[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "litrevu"
version = "1.0.0"
description = "Application web Django pour demander et publier des critiques de livres"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "Sebastian", email = "votre.email@example.com"},
]
keywords = ["django", "web", "books", "reviews", "critique"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 5.2",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

dependencies = [
    "Django>=5.2.3",
    "Pillow>=11.2.1",
    "python-dateutil>=2.9.0",
    "python-slugify>=8.0.4",
    "requests>=2.32.4",
]

[project.optional-dependencies]
dev = [
    "django-browser-reload>=1.18.0",
    "django-tailwind>=4.0.1",
    "cookiecutter>=2.6.0",
    "rich>=14.0.0",
    "Pygments>=2.19.2",
]

test = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "factory-boy>=3.2.0",
]

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["authentication*", "review*", "theme*", "LITRevu*"]
exclude = ["tests*", "docs*"]

# Configuration Ruff (remplace flake8, black, isort)
[tool.ruff]
line-length = 79
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "DJ", # flake8-django
]
ignore = [
    "E203", # whitespace before ':'
]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["E501", "F401", "F811"]
"*/settings/*" = ["F405", "F403"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = [
    "migrations/",
    "venv/",
    ".venv/",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "LITRevu.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--cov=.",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
testpaths = ["authentication", "review", "theme"]

[tool.coverage.run]
source = "."
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/tests/*",
    "manage.py",
    "*/settings/*",
    "*/wsgi.py",
    "*/asgi.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]